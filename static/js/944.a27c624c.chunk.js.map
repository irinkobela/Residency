{"version":3,"file":"static/js/944.a27c624c.chunk.js","mappings":"2KAGA,MAAMA,EAAoBC,IAInB,IAADC,EAAA,IAJqB,SACzBC,GAGDF,EACC,MAAMG,GAAiBC,EAAAA,EAAAA,QAAO,MACxBC,GAAcD,EAAAA,EAAAA,QAAO,OAK3BE,EAAAA,EAAAA,WAAU,KAEJD,EAAYE,SACdF,EAAYE,QAAQC,eAAe,CACjCC,SAAU,SACVC,MAAO,WAKV,CAACR,IAGJ,MAAMS,EAA2D,QAA1CV,EAAGC,EAASU,QAAQC,KAAKC,GAAKA,EAAEC,kBAAU,IAAAd,OAAA,EAAvCA,EAAyCe,KAEnE,OAEEC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,gBAAgBC,IAAKd,EAAYe,SAAA,EAC9CH,EAAAA,EAAAA,MAAA,MAAIC,UAAU,gBAAeE,SAAA,CAAC,UAAGlB,EAASA,aAC1CmB,EAAAA,EAAAA,KAAA,OAAKH,UAAU,oBAAmBE,SAE/BlB,EAASU,QAAQU,IAAI,CAACC,EAAQC,KAC7BH,EAAAA,EAAAA,KAAA,UAEEH,UAAWK,EAAOR,UAAY,wBAA0B,gBAAiBK,SAExEG,EAAOP,MAHHQ,OASXH,EAAAA,EAAAA,KAAA,OAAKH,UAAU,yBAAwBE,UACrCH,EAAAA,EAAAA,MAAA,KAAGC,UAAU,sBAAqBE,SAAA,CAAC,sFAChBC,EAAAA,EAAAA,KAAA,UAAAD,SAAST,UAK9BU,EAAAA,EAAAA,KAAA,OAAKH,UAAU,sBAAsBC,IAAKhB,EAAeiB,UACvDH,EAAAA,EAAAA,MAAA,KAAGC,UAAU,mBAAkBE,SAAA,CAAC,gBAAIlB,EAASuB,qBAMrD,GAAeC,EAAAA,EAAAA,MAAK3B,E","sources":["components/EasyStudyModeView.js"],"sourcesContent":["import React, { useEffect, memo, useRef } from 'react';\r\nimport './QuestionView.css'; // Reusing existing CSS\r\n\r\nconst EasyStudyModeView = ({\r\n  question\r\n  // onAnswerResult prop is no longer strictly needed here if we don't track answers\r\n  // but keeping it won't hurt if you use it elsewhere for statistics.\r\n}) => {\r\n  const explanationRef = useRef(null);\r\n  const questionRef = useRef(null); // <--- NEW: Ref for the question card itself\r\n\r\n  // In Easy Study Mode, the explanation and correct answer are always visible immediately.\r\n  // No need for selectedAnswer or isAnswered state within this component.\r\n\r\n  useEffect(() => {\r\n    // <--- MODIFIED: Scroll to the top of the question when a new question is loaded\r\n    if (questionRef.current) {\r\n      questionRef.current.scrollIntoView({\r\n        behavior: 'smooth',\r\n        block: 'start' // Scrolls the top of the element to the top of the viewport\r\n      });\r\n    }\r\n    // The previous logic to scroll to explanationRef is removed as scrolling to the question card\r\n    // will naturally bring the explanation into view if it's below the question.\r\n  }, [question]); // Scroll effect runs every time the question prop changes\r\n\r\n  // Find the correct answer text for display\r\n  const correctAnswerText = question.answers.find(a => a.isCorrect)?.text;\r\n\r\n  return (\r\n    // <--- NEW: Attach the questionRef to the main question-card div\r\n    <div className=\"question-card\" ref={questionRef}>\r\n      <h2 className=\"question-text\">❓ {question.question}</h2>\r\n      <div className=\"answers-container\">\r\n        {/* Buttons are just for display now, no interaction needed to reveal answer/explanation */}\r\n        {question.answers.map((answer, index) => (\r\n          <button\r\n            key={index}\r\n            className={answer.isCorrect ? \"answer-button correct\" : \"answer-button\"} // Highlight correct answer always\r\n          >\r\n            {answer.text}\r\n          </button>\r\n        ))}\r\n      </div>\r\n\r\n      {/* Correct answer text is always shown */}\r\n      <div className=\"correct-answer-section\">\r\n        <p className=\"correct-answer-text\">\r\n          ✅ სწორი პასუხია: <strong>{correctAnswerText}</strong>\r\n        </p>\r\n      </div>\r\n\r\n      {/* Explanation section is always shown */}\r\n      <div className=\"explanation-section\" ref={explanationRef}>\r\n        <p className=\"explanation-text\">ℹ️ {question.explanation}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default memo(EasyStudyModeView);\r\n"],"names":["EasyStudyModeView","_ref","_question$answers$fin","question","explanationRef","useRef","questionRef","useEffect","current","scrollIntoView","behavior","block","correctAnswerText","answers","find","a","isCorrect","text","_jsxs","className","ref","children","_jsx","map","answer","index","explanation","memo"],"sourceRoot":""}